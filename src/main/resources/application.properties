server.port=8097
spring.application.name=role
nacos.config.server-addr=114.55.145.114:8848
#spring.cloud.nacos.config.server-addr=114.55.145.114:8848
#spring.cloud.nacos.discovery.server-addr=114.55.145.114:8848
spring.jackson.time-zone= GMT+8

#数据库配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://1.13.176.144:3306/zuhaowan_test?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.druid.username=linux_mysql
spring.datasource.druid.password=password

#spring.datasource.druid.url=jdbc:mysql://1.116.231.179:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
#spring.datasource.druid.username=root
#spring.datasource.druid.password=root



##################    连接池配置    ################
#连接池建立时创建的初始化连接数
spring.datasource.druid.initial-size=5
#连接池中最大的活跃连接数
spring.datasource.druid.max-active=20
#连接池中最小的活跃连接数
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.validation-query-timeout=30000
#是否在获得连接后检测其可用性
spring.datasource.druid.test-on-borrow=false
#是否在连接放回连接池后检测其可用性
spring.datasource.druid.test-on-return=false
#是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall

#logging配置
logging.file.name=${logging.file.path}/${spring.application.name}.log
logging.file.path=logs
logging.level.com.extrotec.saas=debug
logging.pattern.console = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%X{TRACE_ID}] [%thread] %logger{50} - %msg%n
logging.pattern.file= = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%X{TRACE_ID}] [%thread] %logger{50} - %msg%n

mybatis.mapper-locations=classpath:mapper/*.xml

#swagger 开关
swagger2.enable=true

# Redis 服务?地址
spring.redis.host=114.55.145.114
# Redis 服务?连接端?
spring.redis.port=20002
spring.redis.password=123456
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=100
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=PT10S
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=30
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=1
#链接超时时间
spring.redis.timeout=PT10S

spring.devtools.restart.poll-interval=3000ms
spring.devtools.restart.quiet-period=2999ms

#JWT ??
jwt.secretKey=78944878877848fg)
jwt.accessTokenExpireTime=PT2H
jwt.refreshTokenExpireTime=PT8H
jwt.refreshTokenExpireAppTime=P30D
jwt.issuer=extrotec.com
#PaaS??token??????
jwt.paasTokenExpireTime=P5D

pagehelper.helperDialect=mysql
pagehelper.reasonable=true

#thymeleaf
# 前缀 默认读取classpath:/templates/
spring.thymeleaf.prefix=classpath:/templates/
# 后缀
spring.thymeleaf.suffix=.html
spring.thymeleaf.charset=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false

# 单文件最大支持文件大小
spring.servlet.multipart.maxFileSize=1000MB
# 文件总大小最大支持文件大小
spring.servlet.multipart.maxRequestSize=1000MB
#win:文件存储路径
file.path=D:/Business/image/
#linux:文件存储路径
#file.path=/data/image/
user.default.role = 2cc1c78c-cdfd-42b9-813f-f91000a32f36
dingtalk.webhook =https://oapi.dingtalk.com/robot/send?access_token=9aef8c242ff4ad97ee644d1b3e859284152c90c4bfda4a0a0f40c8e296335be6
dingtalk.secret =SEC2ca0e08d0b19d188b85f736c6e1c0a7db715ab2f7a2684458c7dae7552f7e1ee
dingtalk.userMobil = 18851115846,18061675143

##算法接口地址
algorithm.url = 218.94.159.100:8082


#PaaS平台账号密码
paas.account = app-industry@extrotec.com
paas.pwd = Extrotec@2021!
pass.project.id = 4f369e5023d8492bb6526893601db344

#每天凌晨一点
time.dataset = 0 0 1 1/1 * ?  
time.model = 0 0 1 1/1 * ?  

#minIO 地址
minio.endpoint= 114.55.145.114
minio.port= 11030
minio.accessKey= minio
minio.secretKey= minio123456
minio.secure= false
minio.bucketName= selfmanage

#默认角色
ser.default.role = ff2fe671-514c-43fb-96ec-9196129f481d